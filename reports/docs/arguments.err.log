Traceback (most recent call last):
  File "/usr/local/Caskroom/miniconda/base/envs/jupyterbook/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/Caskroom/miniconda/base/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/Caskroom/miniconda/base/envs/jupyterbook/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/local/Caskroom/miniconda/base/envs/jupyterbook/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/local/Caskroom/miniconda/base/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/usr/local/Caskroom/miniconda/base/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/Caskroom/miniconda/base/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
from pandas import *
# import matplotlib.pyplot as plt
# import seaborn as sns
# import dash
# from dash import dcc, html
# from dash.dependencies import Input, Output
# import plotly.express as px

df = pd.read_csv("statesdata.csv")
df.columns = df.columns.str.strip()

# Check for 'YEAR' column
if 'YEAR' not in df.columns:
    raise KeyError("The 'YEAR' column is missing or misspelled in the DataFrame.")

# Calculate min and max values for RATE to set fixed color scale
min_rate = df['RATE'].min()
max_rate = df['RATE'].max()

# Sort years to ensure the slider goes from earliest to latest year
years = sorted(df['YEAR'].unique())

# Initialize the figure
fig = go.Figure()

# Create a choropleth map for each year and add it to the figure
for year in years:
    filtered_df = df[df['YEAR'] == year]
    fig.add_trace(
        go.Choropleth(
            locations=filtered_df['STATE'],
            z=filtered_df['RATE'],
            locationmode='USA-states',
            colorscale='Turbo',
            zmin=min_rate,
            zmax=max_rate,
            hovertext=filtered_df['STATE'],
            hoverinfo='location+z+text',
            visible=False,
            name=str(year)
        )
    )

# Make the first trace visible
fig.data[0].visible = True

# Create sliders
steps = []
for i, year in enumerate(years):
    step = dict(
        method='update',
        args=[{'visible': [j == i for j in range(len(fig.data))]},
              {'title': f'US Data for {year} - Death Rate'}],
        label=str(year)
    )
    steps.append(step)

sliders = [dict(
    active=0,
    steps=steps,
    x=0.02,  # Move the slider more to the left
    xanchor='left',
    y=0,
    yanchor='top',
    pad=dict(t=50)
)]

# Add the sliders to the figure
fig.update_layout(
    title_text=f'US Data for {years[0]} - Death Rate',
    geo=dict(
        scope='usa',
        lakecolor='rgb(255, 255, 255)',
        projection=dict(type='albers usa'),
        showlakes=True,
        subunitcolor="rgb(255, 255, 255)",
    ),
    margin=dict(l=50, r=50, t=50, b=50),
    sliders=sliders,
    height=800,  # Adjust the height as needed
)

# Show the interactive map
fig.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[5], line 25[0m
[1;32m     22[0m years [38;5;241m=[39m [38;5;28msorted[39m(df[[38;5;124m'[39m[38;5;124mYEAR[39m[38;5;124m'[39m][38;5;241m.[39munique())
[1;32m     24[0m [38;5;66;03m# Initialize the figure[39;00m
[0;32m---> 25[0m fig [38;5;241m=[39m [43mgo[49m[38;5;241m.[39mFigure()
[1;32m     27[0m [38;5;66;03m# Create a choropleth map for each year and add it to the figure[39;00m
[1;32m     28[0m [38;5;28;01mfor[39;00m year [38;5;129;01min[39;00m years:

[0;31mNameError[0m: name 'go' is not defined

